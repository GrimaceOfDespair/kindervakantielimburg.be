<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="advanced.TabText" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="FooterText.Title" xml:space="preserve">
    <value>Footer Text</value>
  </data>
  <data name="HostName.HelpTitle" xml:space="preserve">
    <value>Used in multiple sites scenarios to determine which start page match a certain domain name (e.g. n2cms.com)</value>
  </data>
  <data name="HostName.Title" xml:space="preserve">
    <value>Host Name</value>
  </data>
  <data name="Image.HelpTitle" xml:space="preserve">
    <value>Displayed above the main text</value>
  </data>
  <data name="Image.Title" xml:space="preserve">
    <value>Main image</value>
  </data>
  <data name="Images.Title" xml:space="preserve">
    <value>Images (one image url on each line)</value>
  </data>
  <data name="LatestChangesMaxCount.Title" xml:space="preserve">
    <value>Latest changes max count</value>
  </data>
  <data name="Layout.Title" xml:space="preserve">
    <value>Site Layout</value>
  </data>
  <data name="LinkText.Title" xml:space="preserve">
    <value>Linked text</value>
  </data>
  <data name="LinkUrl.Title" xml:space="preserve">
    <value>Link url</value>
  </data>
  <data name="Name.HelpTitle" xml:space="preserve">
    <value>Displayed in the browser's address bar.</value>
  </data>
  <data name="Name.Title" xml:space="preserve">
    <value>URL segment</value>
  </data>
  <data name="Published.BetweenText" xml:space="preserve">
    <value>and </value>
  </data>
  <data name="Published.CheckBoxText" xml:space="preserve">
    <value>Published between</value>
  </data>
  <data name="Published.HelpTitle" xml:space="preserve">
    <value>The page is available to visitors between these dates. An empty start date means the item isn't published yet. An empty stop date means the item never expires.</value>
  </data>
  <data name="RedirectUrl.Title" xml:space="preserve">
    <value>Redirect to</value>
  </data>
  <data name="ShowTitle.HelpTitle" xml:space="preserve">
    <value>Unchecking this options hides the page title</value>
  </data>
  <data name="ShowTitle.CheckBoxText" xml:space="preserve">
    <value>Display title above text content</value>
  </data>
  <data name="SmtpHost.Title" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="SmtpPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SmtpPort.Title" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="SmtpUser.Title" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Text.HelpTitle" xml:space="preserve">
    <value>The default text on this page, displayed in the central column.</value>
  </data>
  <data name="Text.Title" xml:space="preserve">
    <value>Main text</value>
  </data>
  <data name="Theme.Title" xml:space="preserve">
    <value>Site Theme</value>
  </data>
  <data name="Title.HelpTitle" xml:space="preserve">
    <value>Displyed as the page's main header and in menus.</value>
  </data>
  <data name="Title.Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Visible.HelpTitle" xml:space="preserve">
    <value>Unchecking this options hides the page in menus but it's still available if you know the address to it.</value>
  </data>
  <data name="Visible.CheckBoxText" xml:space="preserve">
    <value>Reveal page in navigation</value>
  </data>
  <data name="ShowTitle.Title" xml:space="preserve">
    <value>Show title on page</value>
  </data>
  <data name="Visible.Title" xml:space="preserve">
    <value>Visble in menu's</value>
  </data>
  <data name="FirstName.Title" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName.Title" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Attn.Title" xml:space="preserve">
    <value>Attn</value>
  </data>
  <data name="DateOfBirth.Title" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="Holiday.Title" xml:space="preserve">
    <value>Holiday</value>
  </data>
  <data name="IdNumber.Title" xml:space="preserve">
    <value>ID Card number</value>
  </data>
  <data name="Number.Title" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Owner.Title" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="PhoneNumber.Title" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="PlaceOfBirth.Title" xml:space="preserve">
    <value>Place of birth</value>
  </data>
  <data name="PostalCode.Title" xml:space="preserve">
    <value>Postal code</value>
  </data>
  <data name="Street.Title" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Suffix.Title" xml:space="preserve">
    <value>Address suffix</value>
  </data>
  <data name="Location.Title" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="AcceptationStatus.Title" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AllowPictures.CheckBoxText" xml:space="preserve">
    <value>Any pictures taken of this person may be used in publications from KVG</value>
  </data>
  <data name="AllowPictures.Title" xml:space="preserve">
    <value>Picture allowance</value>
  </data>
  <data name="EatsNo.Title" xml:space="preserve">
    <value>Eats no</value>
  </data>
  <data name="EatsNoEggs.CheckBoxText" xml:space="preserve">
    <value>Eats no eggs</value>
  </data>
  <data name="EatsNoFish.CheckBoxText" xml:space="preserve">
    <value>Eats no fish</value>
  </data>
  <data name="EatsNoMeat.CheckBoxText" xml:space="preserve">
    <value>Eats no meat</value>
  </data>
  <data name="HandicapFlag.Title" xml:space="preserve">
    <value>Handicapped?</value>
  </data>
  <data name="IQ.Title" xml:space="preserve">
    <value>IQ</value>
  </data>
  <data name="IsKvgMember.Title" xml:space="preserve">
    <value>Is member of KVG?</value>
  </data>
  <data name="KvgMembership.Title" xml:space="preserve">
    <value>KVG Membership number</value>
  </data>
  <data name="MentalHandicap.Title" xml:space="preserve">
    <value>Mental handicap</value>
  </data>
  <data name="Motivation.Title" xml:space="preserve">
    <value>Motivation of acceptation / rejection</value>
  </data>
  <data name="OtherUtilities.Title" xml:space="preserve">
    <value>Other utilities</value>
  </data>
  <data name="OwnWheelChair.Title" xml:space="preserve">
    <value>Brings own wheelchair</value>
  </data>
  <data name="Participation.Title" xml:space="preserve">
    <value>Comes as:</value>
  </data>
  <data name="PhysicalHandicap.Title" xml:space="preserve">
    <value>Physical handicap</value>
  </data>
  <data name="SocialHandicap.Title" xml:space="preserve">
    <value>Social handicap</value>
  </data>
  <data name="Vegetarian.Title" xml:space="preserve">
    <value>Is a vegetarian?</value>
  </data>
  <data name="VisitDate.Title" xml:space="preserve">
    <value>Visit planned / Visted</value>
  </data>
  <data name="VisitReport.Title" xml:space="preserve">
    <value>Visit report</value>
  </data>
  <data name="VisuallyImpaired.Title" xml:space="preserve">
    <value>Visually impaired?</value>
  </data>
  <data name="WheelChair.Title" xml:space="preserve">
    <value>Needs a wheelchair?</value>
  </data>
  <data name="EndDate.Title" xml:space="preserve">
    <value>Einddatum</value>
  </data>
  <data name="SelectHoliday.Title" xml:space="preserve">
    <value>Select a holiday</value>
  </data>
  <data name="StartDate.Title" xml:space="preserve">
    <value>Begindatum</value>
  </data>
  <data name="MedicalRecordOk.CheckBoxText" xml:space="preserve">
    <value />
  </data>
  <data name="MedicalRecordOk.Title" xml:space="preserve">
    <value>Medical Record Ok</value>
  </data>
  <data name="Paid.CheckBoxText" xml:space="preserve">
    <value />
  </data>
  <data name="Paid.Title" xml:space="preserve">
    <value>Paid?</value>
  </data>
  <data name="PaymentInfo.Title" xml:space="preserve">
    <value>Remarks</value>
  </data>
</root>